workflows:
  ios-development:
    name: iOS Development Build
    environment:
      vars:
        BUNDLE_ID: "com.example.zapItMobile"
      flutter: stable
      xcode: latest
      cocoapods: default
      ios_signing:
        certificates:
          - Zap It
        provisioning_profiles:
          - Zap it Development
    scripts:
      - name: Get Flutter packages
        script: flutter pub get
      - name: Install CocoaPods
        script: pod install --project-directory=ios
      - name: Extract signing info
        script: |
          PROFILE_PATH=$(find "$HOME/Library/MobileDevice/Provisioning Profiles" -name "*.mobileprovision" | head -1)
          TEAM_ID=$(security cms -D -i "$PROFILE_PATH" | plutil -extract TeamIdentifier.0 raw -)
          CERT_NAME=$(security find-identity -v -p codesigning | grep "Apple Development" | head -1 | sed 's/.*"\(.*\)"/\1/')
          echo "Team ID: $TEAM_ID"
          echo "Certificate: $CERT_NAME"
          echo "Profile: Zap it Development"
          echo "export DEVELOPMENT_TEAM=\"$TEAM_ID\"" >> $CM_ENV
          echo "export CODE_SIGN_IDENTITY=\"$CERT_NAME\"" >> $CM_ENV
      - name: Build Flutter for iOS (no codesign)
        script: |
          echo "Building Flutter iOS..."
          flutter build ios --release --no-codesign
      - name: Archive with xcodebuild (workspace)
        script: |
          cd ios
          echo "Cleaning previous builds..."
          xcodebuild clean -workspace Runner.xcworkspace -scheme Runner -configuration Release
          
          echo "Creating archive..."
          xcodebuild archive \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath ../build/ios/Runner.xcarchive \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            PROVISIONING_PROFILE_SPECIFIER="Zap it Development"
      - name: Export IPA
        script: |
          # Re-extract team ID in case environment variable didn't persist
          PROFILE_PATH=$(find "$HOME/Library/MobileDevice/Provisioning Profiles" -name "*.mobileprovision" | head -1)
          TEAM_ID=$(security cms -D -i "$PROFILE_PATH" | plutil -extract TeamIdentifier.0 raw -)
          echo "Using Team ID for export: $TEAM_ID"
          
          cd ios
          echo "Creating ExportOptions.plist..."
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>teamID</key>
            <string>$TEAM_ID</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>$BUNDLE_ID</key>
              <string>Zap it Development</string>
            </dict>
            <key>signingStyle</key>
            <string>manual</string>
          </dict>
          </plist>
          EOF
          
          echo "Exporting IPA..."
          mkdir -p ../build/ios/ipa
          xcodebuild -exportArchive \
            -archivePath ../build/ios/Runner.xcarchive \
            -exportPath ../build/ios/ipa \
            -exportOptionsPlist ExportOptions.plist
      - name: Verify build
        script: |
          echo "=== Build Verification ==="
          if [ -d "build/ios/Runner.xcarchive" ]; then
            echo "✅ Archive created successfully"
          else
            echo "❌ Archive not found"
          fi
          
          if [ -f build/ios/ipa/*.ipa ]; then
            echo "✅ IPA created successfully"
            IPA_FILE=$(find build/ios/ipa -name "*.ipa" | head -1)
            echo "IPA file: $IPA_FILE"
            echo "IPA size: $(ls -lh "$IPA_FILE" | awk '{print $5}')"
          else
            echo "❌ IPA not found"
            echo "Export logs:"
            ls -la /var/folders/*/T/Runner_*.xcdistributionlogs 2>/dev/null || echo "No export logs found"
            echo "IPA directory contents:"
            ls -la build/ios/ipa/ || echo "IPA directory not found"
            exit 1
          fi
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/Runner.xcarchive/**/*
      - ios/ExportOptions.plist

  ios-development-alternative:
    name: iOS Development Alternative
    environment:
      vars:
        BUNDLE_ID: "com.example.zapItMobile"
      flutter: stable
      xcode: latest
      cocoapods: default
      ios_signing:
        certificates:
          - Zap It
        provisioning_profiles:
          - Zap it Development
    scripts:
      - name: Get Flutter packages
        script: flutter pub get
      - name: Install CocoaPods
        script: pod install --project-directory=ios
      - name: Build Flutter iOS
        script: flutter build ios --release --no-codesign
      - name: Use profiles and build IPA
        script: |
          echo "Using xcode-project commands..."
          xcode-project use-profiles --archive-method=development
          xcode-project build-ipa --project ios/Runner.xcodeproj --scheme Runner
    artifacts:
      - build/ios/ipa/*.ipa
